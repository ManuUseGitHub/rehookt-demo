[{"/Users/jeanlucemmanuelverhanneman/Documents/Projects/Rehookt/src/index.js":"1","/Users/jeanlucemmanuelverhanneman/Documents/Projects/Rehookt/src/reportWebVitals.js":"2","/Users/jeanlucemmanuelverhanneman/Documents/Projects/Rehookt/src/App.js":"3","/Users/jeanlucemmanuelverhanneman/Documents/Projects/Rehookt/src/Fields/index.js":"4","/Users/jeanlucemmanuelverhanneman/Documents/Projects/Rehookt/src/QuerySelector/index.js":"5","/Users/jeanlucemmanuelverhanneman/Documents/Projects/Rehookt/src/HookedField/index.js":"6","/Users/jeanlucemmanuelverhanneman/Documents/Projects/Rehookt/src/ErrorBox/index.js":"7","/Users/jeanlucemmanuelverhanneman/Documents/Projects/Rehookt/src/HintBox/index.js":"8","/Users/jeanlucemmanuelverhanneman/Documents/Projects/Rehookt/src/HookedList/index.js":"9"},{"size":500,"mtime":1634491214677,"results":"10","hashOfConfig":"11"},{"size":362,"mtime":1634491214677,"results":"12","hashOfConfig":"11"},{"size":1787,"mtime":1634491214676,"results":"13","hashOfConfig":"11"},{"size":2542,"mtime":1634491214676,"results":"14","hashOfConfig":"11"},{"size":2413,"mtime":1634491214677,"results":"15","hashOfConfig":"11"},{"size":740,"mtime":1634491214676,"results":"16","hashOfConfig":"11"},{"size":471,"mtime":1634491214676,"results":"17","hashOfConfig":"11"},{"size":537,"mtime":1634491214676,"results":"18","hashOfConfig":"11"},{"size":1425,"mtime":1634491214676,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"5g8x9g",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"22"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"22"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"22"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"22"},"/Users/jeanlucemmanuelverhanneman/Documents/Projects/Rehookt/src/index.js",[],["45","46"],"/Users/jeanlucemmanuelverhanneman/Documents/Projects/Rehookt/src/reportWebVitals.js",[],"/Users/jeanlucemmanuelverhanneman/Documents/Projects/Rehookt/src/App.js",["47","48"],"import './App.scss';\n\nimport React, { useEffect } from \"react\";\nimport HookedField from \"./HookedField\";\nimport Fields from \"./Fields\";\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nconst qs = require( \"./QuerySelector\" );\nconst { useStates, generate } = require( 'rehookt' );\n\nfunction App( ) {\n  \n  const qo = qs.asObject( );\n      \n  const listingQS =  qo.listing;\n  const listingV = listingQS || \"\";\n\n  const { listing, timing, errors, hint } = useStates( [ \"listing\", listingV ], \"timing\", \"errors\", \"hint\" );\n\n  const onListingChanged = ( {value} ) => {\n\n      if( timing.val ){\n          clearTimeout( timing.val );\n      }\n      \n      timing.set( setTimeout( _=> {\n\n          const newQuery = qs.putParameters( [ { name : \"listing\", val : value } ] );\n          \n          let newLocation = decodeURIComponent( '/?' + newQuery );\n          const m = /(?:\\/=\\?)*.*\\/=\\?.+(&.+)$/.exec( newLocation );\n\n          if( m ){\n              newLocation = \"/?\" + m[ 1 ];\n          }\n          \n          window.location = \"/?redirect=\" + encodeURIComponent( newLocation );\n      }, 1000 ) )\n  }\n\n  return ( <div className=\"App\">\n      <header className=\"App-header\">\n        <div className=\"container\">\n          <div id=\"listing\" className='row'>\n            <div classNames=\"col-sm-12\"><h2> Listing </h2>\n              <label>hook list</label>\n              <HookedField hook={ listing } cb={ onListingChanged }/>\n              <div><h5 className='inputHints'>Input words separated by a space between each element. Enter only \"REHOOKT_NONE\" if you want to have an empty set of hooks</h5></div>\n            </div>\n          </div>\n          <Fields listing={ listingV } hinting={ { errors, hint } } />\n        </div>\n      </header>  \n      \n      </div>\n  ) ;\n}\n\nexport default App;","/Users/jeanlucemmanuelverhanneman/Documents/Projects/Rehookt/src/Fields/index.js",["49","50","51"],"import React, { useEffect } from 'react';\n\nimport ErrorBox from \"../ErrorBox\";\nimport HintBox from '../HintBox';\nimport HookedList from '../HookedList';\n\nimport \"prismjs/themes/prism-solarizedlight.css\";\n\nconst beautify  = require( 'js-beautify' ).js\nconst Prism     = require( 'prismjs' );\n\nconst { useStates, generate } = require( 'rehookt' );\n\nexport default ( { listing, hinting } ) => {\n\n    // set the default value as empty string instead of undefined\n    const prehooks = ( listing ).split( /\\s/ ).map( l => {\n        return l !== \"\" ? [ l, \"\" ] : undefined;\n    } )\n\n    let hooks = { };\n\n    try{\n        hooks = useStates( ...prehooks );\n    }catch( e ){ hinting.errors.set( e.message ) }\n\n    useEffect( _ => { log( hooks ) }, [] );\n\n    const lineMarkJSCode = ( json ) => {\n\n        // --- highlighting the code ---\n        const beautifyOptions = { \n            indent_size : 2, \n            space_in_empty_paren : true \n        };\n\n        const beautified    = beautify( `${ json }` , beautifyOptions );\n        const highlighted   = Prism.highlight( beautified, Prism.languages.javascript, 'javascript' );\n\n        // --- breaking the code down into lines ---\n        const newLineMarker = \"<span class='_newCodeLine'></span>\"; \n\n        const withLines = highlighted\n            .split( '\\n' )\n            .join( `\\n${ newLineMarker }` );\n        \n        return newLineMarker + withLines;\n    }\n\n    const log = ( ) => {\n        let hooks2 = { };\n        \n        // adding the set field to the resulting object because it is ignored\n        Object.keys( hooks ).forEach( h => {  hooks2[ h ] = \n            { \n                val : hooks[ h ].val, \n                set : 'f ( new value )' \n            } \n        } );\n\n        // splitting the string into a word list\n        const textListing = listing.split( /\\s/ );\n\n        const json =  \n            `// This call,\\nconst hooks = useStates( ...${ JSON.stringify( textListing ) } );\\n\\n`+\n            `// will create this object\\nhooks = ${ JSON.stringify( hooks2 ) };`;\n  \n        // highlight and breacking down the code into lines\n        const lineMarkedHTML = lineMarkJSCode( json );\n\n        // Returns a highlighted HTML string\n        const html = { __html : lineMarkedHTML };\n \n        // setting the html as hinting\n        hinting.hint.set( html );\n    }\n\n    return ( <div className='row'>\n        <HookedList hinting={ hinting } cb={ log } hooks={ hooks }/>\n        <ErrorBox   hinting={ hinting }/>\n        <HintBox    hinting={ hinting }/>\n    </div> )\n}","/Users/jeanlucemmanuelverhanneman/Documents/Projects/Rehookt/src/QuerySelector/index.js",[],"/Users/jeanlucemmanuelverhanneman/Documents/Projects/Rehookt/src/HookedField/index.js",["52"],"\nimport React from 'react';\n\nexport default ( { hook, name, attr, cb = null } ) => {\n    \n    const {\n        placeholder = \"\",\n        style = {},\n        disabled = false,\n        classNames =\"\"\n    } = ( attr || {} );\n\n    const onChange = ( e ) => {\n        const newValue = e.target.value;\n        \n        hook.set( newValue );\n\n        if( cb != null ){\n            cb( { name, hook , value : newValue } );\n        }\n    }\n\n    return ( \n        <input \n            value       = { hook.val } \n            placeholder = { placeholder } \n            onChange    = { onChange } \n            style       = { style } \n            className   = { \"form-control \" + classNames } \n            disabled    = { disabled } \n        /> \n    )\n}","/Users/jeanlucemmanuelverhanneman/Documents/Projects/Rehookt/src/ErrorBox/index.js",["53"],"import React from 'react';\n\nexport default ( { hinting } ) => {\n    const { errors } = hinting;\n\n    const showErrorBox = ( ) => {\n        if( errors.val ){ \n            return (\n                <div  id=\"error\" className=\"col-sm-12\">\n                    <h3>Error box :</h3>\n\n                    <p>\n                        { errors.val }\n                    </p>\n                </div>);\n        }\n    }\n    return <React.Fragment>{ showErrorBox( ) }</React.Fragment>\n}","/Users/jeanlucemmanuelverhanneman/Documents/Projects/Rehookt/src/HintBox/index.js",["54"],"import React from 'react';\n\nexport default ( { hinting } ) => {\n    const { errors } = hinting;\n\n    const showErrorBox = ( ) => {\n        if( !errors.val ){ \n\n            return (\n                <div id=\"code\" className=\"col-sm-12\">\n                    <h2>Resulting code</h2>\n                    <div id='code-wrapper'>\n                        <pre dangerouslySetInnerHTML={ hinting.hint.val }/>\n                    </div>\n                </div>);\n        }\n    }\n    \n    return <React.Fragment>{ showErrorBox( ) }</React.Fragment>\n}","/Users/jeanlucemmanuelverhanneman/Documents/Projects/Rehookt/src/HookedList/index.js",["55"],"import React from 'react';\nimport HookedField from '../HookedField';\n\nexport default ( { hinting, cb, hooks } ) => {\n    const { errors } = hinting;\n    const uplog = ( { name, hook , value } ) => {\n        \n        const copy = Object.assign( {}, hooks );\n        \n        copy[ name ].val = value;\n\n        cb( copy );\n    }\n    const showErrorBox = _ => {\n        if( !errors.val ){ \n            return (\n                <div  id=\"hooked-list\" className=\"col-sm-12\">\n                    <h2> Hooked inputs list </h2>\n\n                    <div className=\"row\">\n                        { Object.keys( hooks ).map( ( name, index ) => {\n                            \n                            const attr = { placeholder : name };\n\n                            return (\n                                <div className='hooked-input col-sm-6 col-md-3' key = { index }>\n                                    <HookedField \n                                        name = { name }\n                                        hook = { hooks[ name ] } \n                                        cb   = { uplog } \n                                        attr = { attr }\n                                    />\n                                </div>\n                            )\n                        })}\n                    </div>\n                </div>);\n        }\n    }\n    \n    return <React.Fragment>{ showErrorBox( ) }</React.Fragment>\n}",{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","severity":1,"message":"61","line":3,"column":17,"nodeType":"62","messageId":"63","endLine":3,"endColumn":26},{"ruleId":"60","severity":1,"message":"64","line":10,"column":20,"nodeType":"62","messageId":"63","endLine":10,"endColumn":28},{"ruleId":"60","severity":1,"message":"64","line":12,"column":20,"nodeType":"62","messageId":"63","endLine":12,"endColumn":28},{"ruleId":"65","severity":1,"message":"66","line":14,"column":1,"nodeType":"67","endLine":83,"endColumn":2},{"ruleId":"68","severity":1,"message":"69","line":27,"column":39,"nodeType":"70","endLine":27,"endColumn":41,"suggestions":"71"},{"ruleId":"65","severity":1,"message":"66","line":4,"column":1,"nodeType":"67","endLine":33,"endColumn":2},{"ruleId":"65","severity":1,"message":"66","line":3,"column":1,"nodeType":"67","endLine":19,"endColumn":2},{"ruleId":"65","severity":1,"message":"66","line":3,"column":1,"nodeType":"67","endLine":20,"endColumn":2},{"ruleId":"65","severity":1,"message":"66","line":4,"column":1,"nodeType":"67","endLine":42,"endColumn":2},"no-native-reassign",["72"],"no-negated-in-lhs",["73"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'generate' is assigned a value but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'hooks' and 'log'. Either include them or remove the dependency array.","ArrayExpression",["74"],"no-global-assign","no-unsafe-negation",{"desc":"75","fix":"76"},"Update the dependencies array to be: [hooks, log]",{"range":"77","text":"78"},[739,741],"[hooks, log]"]