[{"/Users/jeanlucemmanuelverhanneman/Documents/Projects/Rehookt/rehookt-demo/src/index.js":"1","/Users/jeanlucemmanuelverhanneman/Documents/Projects/Rehookt/rehookt-demo/src/reportWebVitals.js":"2","/Users/jeanlucemmanuelverhanneman/Documents/Projects/Rehookt/rehookt-demo/src/App.js":"3","/Users/jeanlucemmanuelverhanneman/Documents/Projects/Rehookt/rehookt-demo/src/QuerySelector/index.js":"4","/Users/jeanlucemmanuelverhanneman/Documents/Projects/Rehookt/rehookt-demo/src/Fields/index.js":"5","/Users/jeanlucemmanuelverhanneman/Documents/Projects/Rehookt/rehookt-demo/src/HookedField/index.js":"6","/Users/jeanlucemmanuelverhanneman/Documents/Projects/Rehookt/rehookt-demo/src/ErrorBox/index.js":"7","/Users/jeanlucemmanuelverhanneman/Documents/Projects/Rehookt/rehookt-demo/src/HookedList/index.js":"8","/Users/jeanlucemmanuelverhanneman/Documents/Projects/Rehookt/rehookt-demo/src/HintBox/index.js":"9"},{"size":499,"mtime":1634493773206,"results":"10","hashOfConfig":"11"},{"size":362,"mtime":1634491214677,"results":"12","hashOfConfig":"11"},{"size":4579,"mtime":1634507447402,"results":"13","hashOfConfig":"11"},{"size":2413,"mtime":1634491214677,"results":"14","hashOfConfig":"11"},{"size":2542,"mtime":1634491214676,"results":"15","hashOfConfig":"11"},{"size":748,"mtime":1634494418587,"results":"16","hashOfConfig":"11"},{"size":540,"mtime":1634497847605,"results":"17","hashOfConfig":"11"},{"size":1425,"mtime":1634491214676,"results":"18","hashOfConfig":"11"},{"size":550,"mtime":1634493811336,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"f6r282",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"22"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"22"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"/Users/jeanlucemmanuelverhanneman/Documents/Projects/Rehookt/rehookt-demo/src/index.js",[],["41","42"],"/Users/jeanlucemmanuelverhanneman/Documents/Projects/Rehookt/rehookt-demo/src/reportWebVitals.js",[],"/Users/jeanlucemmanuelverhanneman/Documents/Projects/Rehookt/rehookt-demo/src/App.js",["43","44"],"/Users/jeanlucemmanuelverhanneman/Documents/Projects/Rehookt/rehookt-demo/src/QuerySelector/index.js",[],"/Users/jeanlucemmanuelverhanneman/Documents/Projects/Rehookt/rehookt-demo/src/Fields/index.js",["45","46","47"],"import React, { useEffect } from 'react';\n\nimport ErrorBox from \"../ErrorBox\";\nimport HintBox from '../HintBox';\nimport HookedList from '../HookedList';\n\nimport \"prismjs/themes/prism-solarizedlight.css\";\n\nconst beautify  = require( 'js-beautify' ).js\nconst Prism     = require( 'prismjs' );\n\nconst { useStates, generate } = require( 'rehookt' );\n\nexport default ( { listing, hinting } ) => {\n\n    // set the default value as empty string instead of undefined\n    const prehooks = ( listing ).split( /\\s/ ).map( l => {\n        return l !== \"\" ? [ l, \"\" ] : undefined;\n    } )\n\n    let hooks = { };\n\n    try{\n        hooks = useStates( ...prehooks );\n    }catch( e ){ hinting.errors.set( e.message ) }\n\n    useEffect( _ => { log( hooks ) }, [] );\n\n    const lineMarkJSCode = ( json ) => {\n\n        // --- highlighting the code ---\n        const beautifyOptions = { \n            indent_size : 2, \n            space_in_empty_paren : true \n        };\n\n        const beautified    = beautify( `${ json }` , beautifyOptions );\n        const highlighted   = Prism.highlight( beautified, Prism.languages.javascript, 'javascript' );\n\n        // --- breaking the code down into lines ---\n        const newLineMarker = \"<span class='_newCodeLine'></span>\"; \n\n        const withLines = highlighted\n            .split( '\\n' )\n            .join( `\\n${ newLineMarker }` );\n        \n        return newLineMarker + withLines;\n    }\n\n    const log = ( ) => {\n        let hooks2 = { };\n        \n        // adding the set field to the resulting object because it is ignored\n        Object.keys( hooks ).forEach( h => {  hooks2[ h ] = \n            { \n                val : hooks[ h ].val, \n                set : 'f ( new value )' \n            } \n        } );\n\n        // splitting the string into a word list\n        const textListing = listing.split( /\\s/ );\n\n        const json =  \n            `// This call,\\nconst hooks = useStates( ...${ JSON.stringify( textListing ) } );\\n\\n`+\n            `// will create this object\\nhooks = ${ JSON.stringify( hooks2 ) };`;\n  \n        // highlight and breacking down the code into lines\n        const lineMarkedHTML = lineMarkJSCode( json );\n\n        // Returns a highlighted HTML string\n        const html = { __html : lineMarkedHTML };\n \n        // setting the html as hinting\n        hinting.hint.set( html );\n    }\n\n    return ( <div className='row'>\n        <HookedList hinting={ hinting } cb={ log } hooks={ hooks }/>\n        <ErrorBox   hinting={ hinting }/>\n        <HintBox    hinting={ hinting }/>\n    </div> )\n}","/Users/jeanlucemmanuelverhanneman/Documents/Projects/Rehookt/rehookt-demo/src/HookedField/index.js",[],"/Users/jeanlucemmanuelverhanneman/Documents/Projects/Rehookt/rehookt-demo/src/ErrorBox/index.js",[],"/Users/jeanlucemmanuelverhanneman/Documents/Projects/Rehookt/rehookt-demo/src/HookedList/index.js",["48"],"import React from 'react';\nimport HookedField from '../HookedField';\n\nexport default ( { hinting, cb, hooks } ) => {\n    const { errors } = hinting;\n    const uplog = ( { name, hook , value } ) => {\n        \n        const copy = Object.assign( {}, hooks );\n        \n        copy[ name ].val = value;\n\n        cb( copy );\n    }\n    const showErrorBox = _ => {\n        if( !errors.val ){ \n            return (\n                <div  id=\"hooked-list\" className=\"col-sm-12\">\n                    <h2> Hooked inputs list </h2>\n\n                    <div className=\"row\">\n                        { Object.keys( hooks ).map( ( name, index ) => {\n                            \n                            const attr = { placeholder : name };\n\n                            return (\n                                <div className='hooked-input col-sm-6 col-md-3' key = { index }>\n                                    <HookedField \n                                        name = { name }\n                                        hook = { hooks[ name ] } \n                                        cb   = { uplog } \n                                        attr = { attr }\n                                    />\n                                </div>\n                            )\n                        })}\n                    </div>\n                </div>);\n        }\n    }\n    \n    return <React.Fragment>{ showErrorBox( ) }</React.Fragment>\n}","/Users/jeanlucemmanuelverhanneman/Documents/Projects/Rehookt/rehookt-demo/src/HintBox/index.js",[],{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","severity":1,"message":"54","line":3,"column":17,"nodeType":"55","messageId":"56","endLine":3,"endColumn":26},{"ruleId":"53","severity":1,"message":"57","line":10,"column":20,"nodeType":"55","messageId":"56","endLine":10,"endColumn":28},{"ruleId":"53","severity":1,"message":"57","line":12,"column":20,"nodeType":"55","messageId":"56","endLine":12,"endColumn":28},{"ruleId":"58","severity":1,"message":"59","line":14,"column":1,"nodeType":"60","endLine":83,"endColumn":2},{"ruleId":"61","severity":1,"message":"62","line":27,"column":39,"nodeType":"63","endLine":27,"endColumn":41,"suggestions":"64"},{"ruleId":"58","severity":1,"message":"59","line":4,"column":1,"nodeType":"60","endLine":42,"endColumn":2},"no-native-reassign",["65"],"no-negated-in-lhs",["66"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'generate' is assigned a value but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'hooks' and 'log'. Either include them or remove the dependency array.","ArrayExpression",["67"],"no-global-assign","no-unsafe-negation",{"desc":"68","fix":"69"},"Update the dependencies array to be: [hooks, log]",{"range":"70","text":"71"},[739,741],"[hooks, log]"]